{"version":3,"sources":["webpack:///./demo/doc/Flex.md"],"names":["__webpack_require__","MarkdownItReactComponent","props","_classCallCheck","this","_this","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","call","state","React","Component","flag","setState","_react2","default","createElement","className","id","href","aria-hidden"],"mappings":"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","file":"js/35.bef19f02.bundle.js","sourcesContent":["\n    import React from 'react'; import {Flex} from '../../src/index.js'; import _ from 'lodash';\n    \n    \n    \n    class MarkdownItReactComponent extends React.Component {\n        constructor(props){\n            super(props);\n            this.state = {};\n        }\n        handleToggleCode(flag){\n            const state = {};\n            state['showCode' + flag] = !this.state['showCode' + flag];\n            this.setState(state);\n        }\n        \n        render(){\n            return (\n                <div className=\"doc\">\n                    <h2 id=\"flex\"><a className=\"header-anchor\" href=\"#flex\" aria-hidden=\"true\">¶</a> Flex</h2>\n<p>语法见 <a href=\"http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html\">Flex</a></p>\n<p>本组件只是个简单的封装，只提供兼容的属性</p>\n<h3 id=\"props\"><a className=\"header-anchor\" href=\"#props\" aria-hidden=\"true\">¶</a> Props</h3>\n<ul>\n<li><code>flex (number|bool)</code> 项目放大比例，默认<code>true</code>，也即flex等于1。</li>\n<li><code>auto (bool)</code> 即 <code>flex: 1 1 auto</code></li>\n<li><code>none (bool)</code> 即 <code>flex: 0 0 auto</code> 当不希望剩余空间不足时不被压缩用</li>\n<li><code>width (string)</code> 如果定义了width，额外使用了<code>none</code>(不会被放大和缩小)</li>\n<li><code>height (string)</code> 同上</li>\n<li><code>row (bool)</code></li>\n<li><code>column (bool)</code></li>\n<li><code>wrap (bool)</code></li>\n<li><code>nowrap (bool)</code></li>\n<li><code>justifyStart (bool)</code></li>\n<li><code>justifyEnd (bool)</code></li>\n<li><code>justifyCenter (bool)</code></li>\n<li><code>justifyBetween (bool)</code></li>\n<li><code>justifyAround (bool)</code></li>\n<li><code>alignStart (bool)</code></li>\n<li><code>alignEnd (bool)</code></li>\n<li><code>alignCenter (bool)</code></li>\n<li><code>alignBaseline (bool)</code></li>\n<li><code>alignStretch (bool)</code></li>\n<li><code>...rest</code></li>\n</ul>\n<p>以上只列了写常用的特性，还有些很有用的特性，不妨直接用style来处理。</p>\n<p>比如 <code>flex: 1 0 auto</code> ，如果空间足够则撑满，如果空间不足也不会被压缩，特别适合用在内滚动容器（然而经试验当内容多的适合在pc会出现滚动条(设置了<code>overflow:auto</code>)，在移动端却没有，神了个奇）。</p>\n<p>Flex 组件默认是</p>\n<pre><code className=\"language-less\"><span className=\"hljs-selector-class\">.gm-flex</span> {'{'}<br />  <span className=\"hljs-attribute\">display</span>: flex;<br />  <span className=\"hljs-attribute\">flex-direction</span>: row;<br />  <span className=\"hljs-attribute\">flex-wrap</span>: nowrap;<br />  <span className=\"hljs-attribute\">justify-content</span>: flex-start;<br />  <span className=\"hljs-attribute\">align-content</span>: stretch;<br />  <span className=\"hljs-attribute\">align-items</span>: stretch;<br />  <span className=\"hljs-attribute\">box-sizing</span>: border-box;<br />{'}'}<br /></code></pre>\n\n                </div>\n            );\n        }\n    };\n\n    export default MarkdownItReactComponent;"],"sourceRoot":""}