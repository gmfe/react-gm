{"version":3,"sources":["webpack:///./demo/doc/SheetColumn.md"],"names":["__webpack_require__","_index","list","id","name","age","_gm_select","MarkdownItReactComponent","props","_classCallCheck","this","_this","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","call","state","React","Component","flag","setState","_react2","default","createElement","className","href","aria-hidden","Sheet","SheetColumn","field","style","width","backgroundColor","value","render","i","onClick","handleToggleCode","bind"],"mappings":"ybACIA,EAAA,IAA2BC,EAAAD,EAAA,GAE3B,IAAME,IACNC,GAAI,EACJC,KAAM,KACNC,IAAK,OAELF,GAAI,EACJC,KAAM,KACNC,IAAK,KACLC,YAAY,IAEbH,GAAI,EACJC,KAAM,KACNC,IAAK,OAIEE,cACF,SAAAA,EAAYC,gGAAMC,CAAAC,KAAAH,GAAA,IAAAI,mKAAAC,CAAAF,MAAAH,EAAAM,WAAAC,OAAAC,eAAAR,IAAAS,KAAAN,KACRF,IADQ,OAEdG,EAAKM,SAFSN,qUADiBO,UAAMC,uDAKxBC,GACb,IAAMH,KACNA,EAAM,WAAaG,IAASV,KAAKO,MAAM,WAAaG,GACpDV,KAAKW,SAASJ,oCAId,OACIK,EAAAC,QAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,QAAAC,cAAA,MAAIrB,GAAG,eAAcmB,EAAAC,QAAAC,cAAA,KAAGC,UAAU,gBAAgBC,KAAK,eAAeC,cAAY,QAA7D,KAArB,gBACpBL,EAAAC,QAAAC,cAAA,sCACAF,EAAAC,QAAAC,cAAA,OAAKC,UAAW,iBAAmBf,KAAKO,MAAL,UAA6B,uBAAyB,KACrFK,EAAAC,QAAAC,cAAA,OAAKC,UAAU,qBACXH,EAAAC,QAAAC,cAAA,qBACAF,EAAAC,QAAAC,cAACvB,EAAA2B,OAAM1B,KAAMA,GACjBoB,EAAAC,QAAAC,cAACvB,EAAA4B,aAAYC,MAAM,KAAK1B,KAAK,OAE7BkB,EAAAC,QAAAC,cAACvB,EAAA4B,aAAYC,MAAM,OAAO1B,KAAMkB,EAAAC,QAAAC,cAAA,iBAAQF,EAAAC,QAAAC,cAAA,WAAR,OAEhCF,EAAAC,QAAAC,cAACvB,EAAA4B,aAAYC,MAAM,MAAM1B,KAAK,KAAK2B,OAAQC,MAAO,QAASC,gBAAiB,SAG5EX,EAAAC,QAAAC,cAACvB,EAAA4B,aAAYC,MAAM,OAAO1B,KAAK,QAC1B,SAAA8B,GAAA,MAAS,MAAQA,IAItBZ,EAAAC,QAAAC,cAACvB,EAAA4B,aAAYC,MAAM,OAAO1B,KAAK,OAAO+B,OAAQ,SAAAD,GAAA,MAAU,MAAQA,KAGhEZ,EAAAC,QAAAC,cAACvB,EAAA4B,aAAYC,MAAM,OAAO1B,KAAK,QAC1B,SAAA8B,GAAA,OAASZ,EAAAC,QAAAC,cAAA,oBAAYU,KAI1BZ,EAAAC,QAAAC,cAACvB,EAAA4B,aAAYC,MAAM,OAAO1B,KAAK,QAC1B,SAAC8B,EAAOE,GAAR,OAAcd,EAAAC,QAAAC,cAAA,oBAAYU,EAAZ,UAA0BhC,EAAKkC,GAAGjC,MAIrDmB,EAAAC,QAAAC,cAACvB,EAAA4B,aAAYC,MAAM,aAAa1B,KAAK,WAChC,SAAC8B,EAAOE,GAAR,OAAcd,EAAAC,QAAAC,cAAA,oBAAYtB,EAAKkC,GAAGhC,KAApB,UAAiCF,EAAKkC,GAAGjC,QAK5DmB,EAAAC,QAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,QAAAC,cAAA,OAAKC,UAAU,wBAAuBH,EAAAC,QAAAC,cAAA,iBAEtCF,EAAAC,QAAAC,cAAA,OAAKC,UAAU,iBAAgBH,EAAAC,QAAAC,cAAA,WAAKF,EAAAC,QAAAC,cAAA,QAAMC,UAAU,eAAcH,EAAAC,QAAAC,cAAA,QAAMC,UAAU,gBAAhB,SAA9B,WAAkF,IAAIH,EAAAC,QAAAC,cAAA,WAAtF,OAAgGF,EAAAC,QAAAC,cAAA,QAAMC,UAAU,aAAhB,MAAhG,KAAuIH,EAAAC,QAAAC,cAAA,QAAMC,UAAU,eAAhB,KAAvI,IAA8KH,EAAAC,QAAAC,cAAA,WAA9K,OAAwLF,EAAAC,QAAAC,cAAA,QAAMC,UAAU,aAAhB,QAAxL,KAAiOH,EAAAC,QAAAC,cAAA,QAAMC,UAAU,eAAhB,QAAjO,IAA2QH,EAAAC,QAAAC,cAAA,WAA3Q,OAAqRF,EAAAC,QAAAC,cAAA,QAAMC,UAAU,aAAhB,OAArR,KAA6TH,EAAAC,QAAAC,cAAA,QAAMC,UAAU,eAAhB,QAAyCH,EAAAC,QAAAC,cAAA,WAAO,IAA7W,KAAoX,IAAIF,EAAAC,QAAAC,cAAA,WAAxX,OAAkYF,EAAAC,QAAAC,cAAA,QAAMC,UAAU,aAAhB,MAAlY,KAAyaH,EAAAC,QAAAC,cAAA,QAAMC,UAAU,eAAhB,KAAza,IAAgdH,EAAAC,QAAAC,cAAA,WAAhd,OAA0dF,EAAAC,QAAAC,cAAA,QAAMC,UAAU,aAAhB,QAA1d,KAAmgBH,EAAAC,QAAAC,cAAA,QAAMC,UAAU,eAAhB,QAAngB,IAA6iBH,EAAAC,QAAAC,cAAA,WAA7iB,OAAujBF,EAAAC,QAAAC,cAAA,QAAMC,UAAU,aAAhB,OAAvjB,KAA+lBH,EAAAC,QAAAC,cAAA,QAAMC,UAAU,eAAhB,QAA/lB,IAAyoBH,EAAAC,QAAAC,cAAA,WAAzoB,OAAmpBF,EAAAC,QAAAC,cAAA,QAAMC,UAAU,aAAhB,cAAnpB,KAAksBH,EAAAC,QAAAC,cAAA,QAAMC,UAAU,gBAAhB,QAA0CH,EAAAC,QAAAC,cAAA,WAAO,IAAnvB,KAA0vB,IAAIF,EAAAC,QAAAC,cAAA,WAA9vB,MAAuwBF,EAAAC,QAAAC,cAAA,QAAMC,UAAU,aAAhB,MAAvwB,KAA8yBH,EAAAC,QAAAC,cAAA,QAAMC,UAAU,eAAhB,KAA9yB,IAAq1BH,EAAAC,QAAAC,cAAA,WAAr1B,MAA81BF,EAAAC,QAAAC,cAAA,QAAMC,UAAU,aAAhB,QAA91B,KAAu4BH,EAAAC,QAAAC,cAAA,QAAMC,UAAU,eAAhB,QAAv4B,IAAi7BH,EAAAC,QAAAC,cAAA,WAAj7B,MAA07BF,EAAAC,QAAAC,cAAA,QAAMC,UAAU,aAAhB,OAA17B,KAAk+BH,EAAAC,QAAAC,cAAA,QAAMC,UAAU,eAAhB,QAAyCH,EAAAC,QAAAC,cAAA,WAAO,IAAlhC,KAAwhCF,EAAAC,QAAAC,cAAA,aACpkCF,EAAAC,QAAAC,cAAA,WAAKF,EAAAC,QAAAC,cAAA,QAAMC,UAAU,gBAAhB,eAA+C,IAA/C,OAAwD,IAAxD,IAAgEH,EAAAC,QAAAC,cAAA,WAAhE,0CAAmHF,EAAAC,QAAAC,cAAA,WAAnH,OAA6HF,EAAAC,QAAAC,cAAA,WAA7H,sCAA0K,IAA1K,uBAAqN,IAArN,KAA8NF,EAAAC,QAAAC,cAAA,WAA9N,OAAwOF,EAAAC,QAAAC,cAAA,WAAxO,gDAA+R,IAAK,IAApS,yCAA+U,IAAK,IAApV,KAA6VF,EAAAC,QAAAC,cAAA,WAA7V,OAAuWF,EAAAC,QAAAC,cAAA,WAAvW,OAAkX,IAAlX,oDAAwa,IAAIF,EAAAC,QAAAC,cAAA,WAA5a,6CAAkeF,EAAAC,QAAAC,cAAA,WAAle,WAAif,IAAjf,yBAA+gB,IAAIF,EAAAC,QAAAC,cAAA,WAAnhB,qBAAijBF,EAAAC,QAAAC,cAAA,WACjjB,IADA,oDACsD,IAAIF,EAAAC,QAAAC,cAAA,WAD1D,oDACqH,IADrH,2BACqJ,IADrJ,KAC8JF,EAAAC,QAAAC,cAAA,WAD9J,OACwKF,EAAAC,QAAAC,cAAA,WADxK,OACmL,IADnL,yCAC8N,IAAIF,EAAAC,QAAAC,cAAA,WADlO,6CACwRF,EAAAC,QAAAC,cAAA,WADxR,WACuS,IADvS,uBACyU,IADzU,QACmV,IADnV,YACuW,IAAIF,EAAAC,QAAAC,cAAA,WAD3W,qBACyYF,EAAAC,QAAAC,cAAA,WADzY,OACmZF,EAAAC,QAAAC,cAAA,WADnZ,OAC8Z,IAD9Z,wCACwc,IAAIF,EAAAC,QAAAC,cAAA,WAD5c,6CACkgBF,EAAAC,QAAAC,cAAA,WADlgB,WACihB,IADjhB,4BACwjB,IADxjB,QACkkB,IADlkB,UAC8kB,IAD9kB,aAC6lB,IAD7lB,YACinB,IAAIF,EAAAC,QAAAC,cAAA,WADrnB,qBACmpBF,EAAAC,QAAAC,cAAA,WADnpB,OAC6pBF,EAAAC,QAAAC,cAAA,WAD7pB,OACwqB,IADxqB,sBACgsB,IAAIF,EAAAC,QAAAC,cAAA,WADpsB,sDACmwBF,EAAAC,QAAAC,cAAA,WADnwB,WACkxB,IADlxB,4BACyzB,IADzzB,eAC00B,IAD10B,UACs1B,IADt1B,aACq2B,IADr2B,YACy3B,IAAIF,EAAAC,QAAAC,cAAA,WAD73B,qBAC25BF,EAAAC,QAAAC,cAAA,WAD35B,WAC+6BF,EAAAC,QAAAC,cAAA,cAE56BF,EAAAC,QAAAC,cAAA,OAAKC,UAAU,oBAAoBY,QAAS3B,KAAK4B,iBAAiBC,KAAK7B,KAAM,IACzEY,EAAAC,QAAAC,cAAA,aAGNF,EAAAC,QAAAC,cAAA,MAAIrB,GAAG,SAAQmB,EAAAC,QAAAC,cAAA,KAAGC,UAAU,gBAAgBC,KAAK,SAASC,cAAY,QAAvD,KAAf,UACNL,EAAAC,QAAAC,cAAA,UACAF,EAAAC,QAAAC,cAAA,UAAIF,EAAAC,QAAAC,cAAA,yCAAJ,eACAF,EAAAC,QAAAC,cAAA,UAAIF,EAAAC,QAAAC,cAAA,gDAAJ,YACAF,EAAAC,QAAAC,cAAA,UAAIF,EAAAC,QAAAC,cAAA,iCAAJ,+CACAF,EAAAC,QAAAC,cAAA,UAAIF,EAAAC,QAAAC,cAAA,6BAAJ,oBACAF,EAAAC,QAAAC,cAAA,UAAIF,EAAAC,QAAAC,cAAA,+BAAJ,oBACAF,EAAAC,QAAAC,cAAA,0CAQmBjB","file":"js/46.0d0c2d5e.bundle.js","sourcesContent":["\n    import React from 'react'; import {Sheet, SheetColumn, Flex} from '../../src/index';\n    \n    const list= [{\n    id: 3,\n    name: '小明',\n    age: '10'\n}, {\n    id: 4,\n    name: '小红',\n    age: '15',\n    _gm_select: true\n}, {\n   id: 5,\n   name: '小蓝',\n   age: '20'\n}];\n\n    \n    class MarkdownItReactComponent extends React.Component {\n        constructor(props){\n            super(props);\n            this.state = {};\n        }\n        handleToggleCode(flag){\n            const state = {};\n            state['showCode' + flag] = !this.state['showCode' + flag];\n            this.setState(state);\n        }\n        \n        render(){\n            return (\n                <div className=\"doc\">\n                    <h2 id=\"sheetcolumn\"><a className=\"header-anchor\" href=\"#sheetcolumn\" aria-hidden=\"true\">¶</a> SheetColumn</h2>\n<p>SheetColumn的顺序决定table列的顺序</p>\n<div className={\"doc-demo-box \" + (this.state['showCode' + 6] ? \"doc-demo-code-active\" : \"\")}>\n    <div className=\"doc-demo-instance\">\n        <h4>Example</h4>\n        <Sheet list={list}>\n    <SheetColumn field=\"id\" name=\"id\"/>\n    \n    <SheetColumn field=\"name\" name={<div>1换行<br/>2</div>}/>\n    \n    <SheetColumn field=\"age\" name=\"年龄\" style={{width: '100px', backgroundColor: 'red'}}/>\n    \n    {/*可以自定义显示，children传入一个func，func提供当前数据值，返回要显示的结果*/}\n    <SheetColumn field=\"name\" name=\"name\">\n        {value => '你好 ' + value}\n    </SheetColumn>\n\n    {/*可以自定义显示，children传入一个func，func提供当前数据值，返回要显示的结果*/}\n    <SheetColumn field=\"name\" name=\"name\" render={value => ('你好 ' + value)}/>\n    \n    {/*不止文本，可以返回任何东西。 可交互的input啊，button啊等*/}\n    <SheetColumn field=\"name\" name=\"name\">\n        {value => <strong>你好 {value}</strong>}\n    </SheetColumn>\n    \n    {/*func第二个参数提供当前数据的索引，通过索引你可以找到当前的数据*/}\n    <SheetColumn field=\"name\" name=\"name\">\n        {(value, i) => <strong>你好 {value}，你的id是 {list[i].id}</strong>}\n    </SheetColumn>\n    \n    {/*field你也可以乱来，你喜欢*/}\n    <SheetColumn field=\"asfafasfas\" name=\"field乱来\">\n        {(value, i) => <strong>你好 {list[i].name}，你的id是 {list[i].id}</strong>}\n    </SheetColumn>\n</Sheet>\n\n    </div>\n    <div className=\"doc-demo-meta\">\n        <div className=\"doc-demo-description\"><p>自定义</p>\n</div>\n        <div className=\"doc-demo-code\"><pre><code className=\"language-js\"><span className=\"hljs-keyword\">const</span> list= [{'{'}<br />    <span className=\"hljs-attr\">id</span>: <span className=\"hljs-number\">3</span>,<br />    <span className=\"hljs-attr\">name</span>: <span className=\"hljs-string\">'小明'</span>,<br />    <span className=\"hljs-attr\">age</span>: <span className=\"hljs-string\">'10'</span><br />{'}'}, {'{'}<br />    <span className=\"hljs-attr\">id</span>: <span className=\"hljs-number\">4</span>,<br />    <span className=\"hljs-attr\">name</span>: <span className=\"hljs-string\">'小红'</span>,<br />    <span className=\"hljs-attr\">age</span>: <span className=\"hljs-string\">'15'</span>,<br />    <span className=\"hljs-attr\">_gm_select</span>: <span className=\"hljs-literal\">true</span><br />{'}'}, {'{'}<br />   <span className=\"hljs-attr\">id</span>: <span className=\"hljs-number\">5</span>,<br />   <span className=\"hljs-attr\">name</span>: <span className=\"hljs-string\">'小蓝'</span>,<br />   <span className=\"hljs-attr\">age</span>: <span className=\"hljs-string\">'20'</span><br />{'}'}];<br /></code></pre>\n<pre><code className=\"language-jsx\">&lt;Sheet list={'{'}list{'}'}&gt;<br />    &lt;SheetColumn field=\"id\" name=\"id\"/&gt;<br />    <br />    &lt;SheetColumn field=\"name\" name={'{'}&lt;div&gt;1换行&lt;br/&gt;2&lt;/div&gt;{'}'}/&gt;<br />    <br />    &lt;SheetColumn field=\"age\" name=\"年龄\" style={'{'}{'{'}width: '100px', backgroundColor: 'red'{'}'}{'}'}/&gt;<br />    <br />    {'{'}/*可以自定义显示，children传入一个func，func提供当前数据值，返回要显示的结果*/{'}'}<br />    &lt;SheetColumn field=\"name\" name=\"name\"&gt;<br />        {'{'}value =&gt; '你好 ' + value{'}'}<br />    &lt;/SheetColumn&gt;<br />\n    {'{'}/*可以自定义显示，children传入一个func，func提供当前数据值，返回要显示的结果*/{'}'}<br />    &lt;SheetColumn field=\"name\" name=\"name\" render={'{'}value =&gt; ('你好 ' + value){'}'}/&gt;<br />    <br />    {'{'}/*不止文本，可以返回任何东西。 可交互的input啊，button啊等*/{'}'}<br />    &lt;SheetColumn field=\"name\" name=\"name\"&gt;<br />        {'{'}value =&gt; &lt;strong&gt;你好 {'{'}value{'}'}&lt;/strong&gt;{'}'}<br />    &lt;/SheetColumn&gt;<br />    <br />    {'{'}/*func第二个参数提供当前数据的索引，通过索引你可以找到当前的数据*/{'}'}<br />    &lt;SheetColumn field=\"name\" name=\"name\"&gt;<br />        {'{'}(value, i) =&gt; &lt;strong&gt;你好 {'{'}value{'}'}，你的id是 {'{'}list[i].id{'}'}&lt;/strong&gt;{'}'}<br />    &lt;/SheetColumn&gt;<br />    <br />    {'{'}/*field你也可以乱来，你喜欢*/{'}'}<br />    &lt;SheetColumn field=\"asfafasfas\" name=\"field乱来\"&gt;<br />        {'{'}(value, i) =&gt; &lt;strong&gt;你好 {'{'}list[i].name{'}'}，你的id是 {'{'}list[i].id{'}'}&lt;/strong&gt;{'}'}<br />    &lt;/SheetColumn&gt;<br />&lt;/Sheet&gt;<br /></code></pre>\n</div>\n        <div className=\"doc-demo-code-btn\" onClick={this.handleToggleCode.bind(this, 6)}>\n            <i/>\n        </div>\n    </div>\n</div><h3 id=\"props\"><a className=\"header-anchor\" href=\"#props\" aria-hidden=\"true\">¶</a> Props</h3>\n<ul>\n<li><code>field (string|isRequired)</code> 某列读取数据的字段名</li>\n<li><code>name (string|element|isRequired)</code> 某列表头的名字</li>\n<li><code>placeholder (any)</code> 默认值， 值为 undefined 和 null 时就显示placeholder的值</li>\n<li><code>render (func)</code> 返回任意东西，自定义单元格展现</li>\n<li><code>children (func)</code> 返回任意东西，自定义单元格展现</li>\n<li>...rest</li>\n</ul>\n\n                </div>\n            );\n        }\n    };\n\n    export default MarkdownItReactComponent;"],"sourceRoot":""}